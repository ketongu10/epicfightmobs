
buildscript {
    repositories {
        jcenter()
        maven {
            name = "forge"
            url = "http://files.minecraftforge.net/maven"
        }
        maven {
            name = "sonatype"
            url = "https://oss.sonatype.org/content/repositories/snapshots/"
        }
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:3.+'
        classpath "com.wynprice.cursemaven:CurseMaven:2.1.1"
    }
}

plugins {
    id "org.sonarqube" version "2.6.2"
    id "maven-publish"
    id "com.wynprice.cursemaven" version "2.1.1"
    id "de.fuerstenau.buildconfig" version "1.1.8"
}

apply plugin: 'net.minecraftforge.gradle'
// Only edit below this line, the above code adds and enables the necessary things for Forge to be setup.
apply plugin: 'eclipse'
apply plugin: 'maven-publish'
sourceCompatibility = targetCompatibility = compileJava.sourceCompatibility = compileJava.targetCompatibility = '1.8' // Need this here so eclipse task generates correctly.

repositories {
    maven {
        name = "CoFH Maven"
        url = "http://maven.covers1624.net"
    }
    maven {
        name = "LatvianModder Ivy"
        url = "https://maven.latmod.com/"
    }
    maven {
        url = "http://dvs1.progwml6.com/files/maven"
    }
    maven {
        url "https://cursemaven.com"
    }

}
version = '2.3'
group = 'com.yourname.modid' // http://maven.apache.org/guides/mini/guide-naming-conventions.html
archivesBaseName = 'ext-fight-mod'


minecraft {
    // The mappings can be changed at any time, and must be in the following format.
    // snapshot_YYYYMMDD   Snapshot are built nightly.
    // stable_#            Stables are built at the discretion of the MCP team.
    // Use non-default mappings at your own risk. they may not always work.
    // Simply re-run your setup task after changing the mappings to update your workspace.
    //mappings channel: 'snapshot', version: '20171003-1.12'
    mappings channel: 'snapshot', version: '20171003-1.12'
    // makeObfSourceJar = false // an Srg named sources jar is made by default. uncomment this to disable.
    accessTransformer = file('src/main/resources/META-INF/accesstransformer.cfg')
    // accessTransformer = file('src/main/resources/META-INF/accesstransformer.cfg')

    // Default run configurations.
    // These can be tweaked, removed, or duplicated as needed.
    runs {
        client {
            workingDirectory project.file('run')

            // Recommended logging data for a userdev environment
            property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'

            // Recommended logging level for the console
            property 'forge.logging.console.level', 'debug'
        }

        server {

            // Recommended logging data for a userdev environment
            property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'

            // Recommended logging level for the console
            property 'forge.logging.console.level', 'debug'
        }
    }
}

dependencies {
    // Specify the version of Minecraft to use, If this is any group other then 'net.minecraft' it is assumed
    // that the dep is a ForgeGradle 'patcher' dependency. And it's patches will be applied.
    // The userdev artifact is a special name and will get all sorts of transformations applied to it.
    minecraft 'net.minecraftforge:forge:1.12.2-14.23.5.2854'
    //compile "curse.maven:ElectroblobsWizardry:${eb_cf_fileid}"
    //compile "curse.maven:AncientSpellcraft:${as_cf_fileid}"
    //compile "curse.maven:AncientWarfare:${aw2_cf_fileid}"
    //compile "curse.maven:Vampirism:${vam_cf_fileid}"
    //compile "curse.maven:IceAndFire:${ice_and_fire_cf_fileid}"
    implementation fg.deobf("curse.maven:electroblobs-wizardry-265642:${eb_cf_fileid}")
    implementation fg.deobf("curse.maven:ice-and-fire-dragons-264231:${ice_and_fire_cf_fileid}")
    implementation fg.deobf("curse.maven:ancient-spellcraft-358124:${as_cf_fileid}")
    implementation fg.deobf("curse.maven:ancient-warfare-2-224602:${aw2_cf_fileid}")
    implementation fg.deobf("curse.maven:vampirism-become-a-vampire-233029:${vam_cf_fileid}")
    implementation fg.deobf("curse.maven:mowzies-mobs-250498:${mowzies_fileid}")
    implementation fg.deobf("curse.maven:mutant-beasts-336272:${mutant_beasts_fileid}")
    implementation fg.deobf("curse.maven:the-creeping-nether-268104:${creep_neth_fileid}")
    implementation fg.deobf("curse.maven:llibrary-243298:${llib_fileid}")
    implementation fg.deobf("curse.maven:wings-302584:${wings_fileid}")
    implementation fg.deobf("curse.maven:epic-siege-mod-229449:${esm_cf_fileid}")
    // You may put jars on which you depend on in ./libs or you may define them like so..
    // compile "some.group:artifact:version:classifier"
    // compile "some.group:artifact:version"

    // Real examples
    // compile 'com.mod-buildcraft:buildcraft:6.0.8:dev'  // adds buildcraft to the dev env
    // compile 'com.googlecode.efficient-java-matrix-library:ejml:0.24' // adds ejml to the dev env

    // The 'provided' configuration is for optional dependencies that exist at compile-time but might not at runtime.
    // provided 'com.mod-buildcraft:buildcraft:6.0.8:dev'

    // These dependencies get remapped to your current MCP mappings
    // deobf 'com.mod-buildcraft:buildcraft:6.0.8:dev'

    // For more info...
    // http://www.gradle.org/docs/current/userguide/artifact_dependencies_tutorial.html
    // http://www.gradle.org/docs/current/userguide/dependency_management.html

}

// Example for how to get properties into the manifest for reading by the runtime..
jar {
    manifest {
        attributes 'FMLAT': 'accesstransformer.cfg'
    }
}


// Example configuration to allow publishing using the maven-publish task
// This is the preferred method to reobfuscate your jar file
jar.finalizedBy('reobfJar')
// However if you are in a multi-project build, dev time needs unobfed jar files, so you can delay the obfuscation until publishing by doing
//publish.dependsOn('reobfJar')

publishing {
    publications {
        mavenJava(MavenPublication) {
            artifact jar
        }
    }
    repositories {
        maven {
            url "file:///${project.projectDir}/mcmodsrepo"
        }
    }
}
